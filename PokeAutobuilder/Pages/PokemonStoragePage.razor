@page "/storage"
@using PokeApiNet
@using PokeAutobuilder.Shared.Cards
@using PokeAutobuilder.Source.Services;
@using PokemonDataModel


@inject NavigationManager NavigationManager
@inject ProfileService Profile
@inject SessionService Session
@inject PokeApiService PokeApiService

<PageTitle>Pokémon Storage</PageTitle>

<div class="d-flex flex-wrap gap-4">
    <MudPaper Width="320px" Height="fit-content">
        <PokemonCard Pokemon="SelectedPokemon" />
    </MudPaper>
    <MudPaper Class="pa-1 d-flex flex-md-1" MinWidth="325px" Elevation="0" Square="true">
        <StorageBox @ref="_storageBox" OnClickPokemon="OnSelectPokemon" />
    </MudPaper>
</div>

<PageFooter />

@code {
    private SmartPokemon? _selectedPokemon;
    public SmartPokemon? SelectedPokemon 
    {
        get => _selectedPokemon;
        set
        {
            _selectedPokemon = value;
            StateHasChanged();
        }
    }

    private StorageBox? _storageBox;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            SelectedPokemon = Profile.PokemonStorage.Pokemon.FirstOrDefault();
        }
        return base.OnAfterRenderAsync(firstRender);
    }

    protected async Task OnSelectPokemon(SmartPokemon selectedPokemon)
    {
        SelectedPokemon = selectedPokemon;
    }
}

@inject ProfileService ProfileService

@page "/teamstorage"

@using PokeApiNet
@using blazorWebAssemblyApp.Shared.Cards

<PageTitle>Team Storage</PageTitle>



@if (StoredTeams is not null)
{
    <MudText Typo="Typo.h6">Pokémon Team Storage</MudText>
    <MudPaper Class="d-flex mud-width-full mud-height-full pa-2" Style="background: var(--mud-palette-background)" Outlined="true" Square="true">
        <MudStack Spacing="3">
            @foreach (PokemonTeam t in StoredTeams)
            {
                <PokemonTeamCard Team="t" OnUpdated="Update" />
                <MudDivider DividerType="DividerType.FullWidth" />
            }
        </MudStack>
    </MudPaper>
}
else
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" Class="mt-8 mb-8" Size="Size.Large" />
    <MudText Typo="Typo.body1">Fetching data from PokeApi...</MudText>
}


@code {
    List<PokemonTeam>? StoredTeams;

    // init
    protected override async Task OnInitializedAsync()
    {
        StoredTeams = await ProfileService.FetchTeamStorage();
    }

    public async void Update()
    {
        StoredTeams = await ProfileService.FetchTeamStorage();
        StateHasChanged();
    }
}

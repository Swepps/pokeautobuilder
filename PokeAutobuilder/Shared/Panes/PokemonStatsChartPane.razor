@using PokemonDataModel
@using Utility

@if (Pokemon is not null)
{
	<div class="d-flex flex-column align-center justify-center mud-width-full">
		<MudText Typo="Typo.subtitle1">Base Stats</MudText>
		<MudChart ChartType="ChartType.Donut" LegendPosition="Position.Left" Width="auto" Height="100%"
		InputData="@Data" InputLabels="@Labels" @bind-SelectedIndex="SelectedIndex" @onmouseout="OnMouseLeaveChart">
			<CustomGraphics>
				<text class="donut-inner-text" x="50%" y="40%" dominant-baseline="middle" text-anchor="middle" fill="var(--mud-palette-text-primary)" font-family="Helvetica" font-size="2">Total</text>
				<text class="donut-inner-text" x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="var(--mud-palette-text-primary)" font-family="Helvetica" font-size="5">@Pokemon.GetBaseStatsTotal()</text>
				<MudPopover Open="@IsTooltipOpen" Class="pa-1" AnchorOrigin="Origin.CenterCenter" TransformOrigin="Origin.TopCenter">
					<MudText>@GetChartTooltip()</MudText>
				</MudPopover>
			</CustomGraphics>
		</MudChart>
	</div>
}

<style>
	.mud-chart .mud-chart-legend {
		min-width: 80px;
	}
</style>

@code {
	[Parameter]
	public SmartPokemon? Pokemon { get; set; }

	public double[] Data = new double[6];
	private int selectedIndex;
	public int SelectedIndex
	{
		get
		{
			return selectedIndex;
		}
		set
		{
			selectedIndex = value;
			IsTooltipOpen = true;
		}
	}
	public string[] Labels = { "HP", "Attack", "Sp. Att", "Defense", "Sp. Def", "Speed" };

	public bool IsTooltipOpen = false;

	// when component is initialised
	protected override void OnParametersSet()
	{
		if (Pokemon is not null)
		{
			Data = Pokemon.GetBaseStatsArray();
		}
	}

	public string GetChartTooltip()
	{
		if (SelectedIndex >= 0 && SelectedIndex < Data.Length)
		{
			return Labels[SelectedIndex] + ": " + Data[SelectedIndex];
		}

		return "";
	}

	public void OnMouseLeaveChart()
	{
		IsTooltipOpen = false;
	}
}

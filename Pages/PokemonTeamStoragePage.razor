@inject ProfileService ProfileService

@page "/teamstorage"

@using PokeApiNet
@using pokeAutoBuilder.Shared.Cards
@using pokeAutoBuilder.Source.Services;

<PageTitle>Team Storage</PageTitle>



@if (StoredTeams is not null)
{
    <MudText Typo="Typo.h6">Pokémon Team Storage</MudText>
    <MudDivider Class="mb-4" DividerType="DividerType.FullWidth" />
    <MudGrid>
        @foreach (PokemonTeam t in StoredTeams)
        {
            <MudItem xs="12" md="6" lg="4" xl="3" Class="pa-1">
                <MudPaper Outlined="true" Style="background: var(--mud-palette-background)">
                    <PokemonTeamCard Team="t" OnUpdated="Update" />
                </MudPaper>
            </MudItem>
        }
    </MudGrid>
}
else
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" Class="mt-8 mb-8" Size="Size.Large" />
    <MudText Typo="Typo.body1">Fetching data from PokeApi...</MudText>
}


@code {
    List<PokemonTeam>? StoredTeams;

    // init
    protected override async Task OnInitializedAsync()
    {
        StoredTeams = await ProfileService.FetchTeamStorage();
    }

    public async void Update()
    {
        StoredTeams = await ProfileService.FetchTeamStorage();
        StateHasChanged();
    }
}

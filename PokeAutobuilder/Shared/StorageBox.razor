@using PokeAutobuilder.Shared.Cards
@using PokeAutobuilder.Source.Services;
@using PokemonDataModel

@inject ProfileService Profile

@implements IDisposable

<MudPaper Class="d-flex mud-width-full mud-height-full pa-2" Style="background: var(--mud-palette-background)" Outlined="true" Square="true">
	<div class="d-flex flex-wrap justify-start align-content-start py-1" style="overflow: auto;">
		@foreach (SmartPokemon? p in Profile.PokemonStorage.Pokemon)
		{
			<PokemonMiniCard Pokemon="p" OnClick="OnClickPokemonCard" />
		}
	</div>
</MudPaper>

@code {
	[Parameter]
	public EventCallback<SmartPokemon> OnClickPokemon { get; set; }

	protected override void OnInitialized()
	{
		Profile.OnStorageChange += StateHasChanged;
	}

	public void Dispose()
	{
		Profile.OnStorageChange -= StateHasChanged;
	}

	public Task OnClickPokemonCard(SmartPokemon pokemon)
	{
		return OnClickPokemon.InvokeAsync(pokemon);
	}
}

@inject ProfileService Profile
@inject IDialogService DialogService

@using PokeAutobuilder.Source.Services
@using PokemonDataModel
@using Utility

<MudTooltip Text="@Pokemon!.Name">
	<MudButton Class="ma-2 pa-1" Color="Color.Surface" OnClick="OnClickCard">
		<MudImage
			Src="@(String.IsNullOrEmpty(Pokemon!.Sprites.FrontDefault) ? Pokemon!.Sprites.Other.OfficialArtwork.FrontDefault : Pokemon!.Sprites.FrontDefault)"
			Style="width: 50px; height: 50px" />
	</MudButton>
</MudTooltip>

@code {
	[Parameter]
	public SmartPokemon? Pokemon { get; set; }

	[Parameter]
	public EventCallback<SmartPokemon> OnClick { get; set; }

	public override Task SetParametersAsync(ParameterView parameters)
	{
		parameters.SetParameterProperties(this);
		if (Pokemon == null)
			throw new InvalidOperationException($"{nameof(PokemonMiniCard)} requires a {nameof(SmartPokemon)} parameter.");

		return base.SetParametersAsync(ParameterView.Empty);
	}

	public Task OnClickCard()
	{
		return OnClick.InvokeAsync(Pokemon);
	}
}

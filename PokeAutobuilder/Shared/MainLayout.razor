@inherits LayoutComponentBase

@using PokeApiNet
@using PokeAutobuilder.Source.Services;
@using PokemonDataModel

@inject ProfileService Profile
@inject SessionService Session
@inject PokeApiService PokeApiService
@inject IAnalytics GlobalTracking
@inject IJSRuntime JS


<MudThemeProvider @ref="_themeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="AutoBuilderTheme" />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.ExtraExtraLarge" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudSpacer />
        <MudStack Row="true" AlignItems="AlignItems.Center">
            <MudImage Src="icon-single.svg" Width="40" Height="40" />
            <MudStack AlignItems="AlignItems.Center" Spacing="0">
                <MudText Typo="Typo.h6">Poké Autobuilder</MudText>
            </MudStack>
        </MudStack>
        <MudSpacer />
        <MudTooltip Text="GitHub Repository">
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/Swepps/pokemonautoteambuilder" Target="_blank" />
        </MudTooltip>
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" Elevation="1" ClipMode="DrawerClipMode.Always">
        <NavMenu />
        <MudDivider />
        <MudSwitch @bind-Checked="@_IsDarkMode" Color="Color.Primary" Class="ma-4 object-bottom" T="bool" Label="Dark Mode" />
    </MudDrawer>
    <MudMainContent Class="pt-16 mud-height-full">
        <MudContainer Class="mt-6" MaxWidth="MaxWidth.ExtraLarge">
            @if (_state == Init.Done)
            {
                <CascadingValue Value="SearchLocations">
                    @Body
                </CascadingValue>
            }
            else if (_state == Init.Initialising)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" Class="mt-8 mb-8" Size="Size.Large" />
                <MudText Typo="Typo.body1">Fetching data from PokeApi...</MudText>
            }
            else
            {
                <MudText Typo="Typo.body1" Color="Color.Error">Error initialising app. Please report on GitHub.</MudText>
            }
        </MudContainer>
    </MudMainContent>
    <ConsentCookie />
</MudLayout>

@code{
    public MudThemeProvider? _themeProvider;

    enum Init { Initialising, Done, Error }

    Init _state = Init.Initialising;

    public List<ILazyPokemonList> SearchLocations { get; } = new();

    // theme stuff
    private bool _isDarkMode;
    private bool _IsDarkMode
    {
        get { return _isDarkMode; }
        set
        {
            _isDarkMode = value;
            OnChangeDarkMode();
        }
    }
    MudTheme AutoBuilderTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = Colors.Red.Accent3,
                Secondary = Colors.Blue.Accent3,
                Dark = Colors.Grey.Lighten1,

                Background = Colors.Grey.Lighten3,
                BackgroundGrey = Colors.Grey.Lighten2,
                DrawerBackground = "#d3d3d3",
                AppbarBackground = Colors.Grey.Lighten1,
                Surface = "#e3e3e3",

                DrawerText = Colors.Grey.Darken3,
                TextPrimary = Colors.Grey.Darken4,
                AppbarText = Colors.Grey.Darken4,
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Red.Accent2,
                Secondary = Colors.Blue.Accent2,
                Dark = Colors.Grey.Darken2,

                Background = Colors.Grey.Darken4,
                BackgroundGrey = Colors.Grey.Darken4,
                DrawerBackground = "#383838",
                AppbarBackground = Colors.Grey.Darken3,
                Surface = "#252525",

                DrawerText = Colors.Grey.Lighten4,
                TextPrimary = Colors.Grey.Lighten4,
                AppbarText = Colors.Grey.Lighten4,
            },

            LayoutProperties = new LayoutProperties()
            {
                DrawerWidthLeft = "260px",
            }
        };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // disable Google analytics if user has declined it
            bool hasCookiePolicy = await JS.InvokeAsync<bool>("HasCookiePolicy");
            if (hasCookiePolicy)
            {
                bool cookiePolicyAccepted = await JS.InvokeAsync<bool>("GetCookiePolicyAccepted");
                if (!cookiePolicyAccepted)
                {
                    GlobalTracking.Disable();
                }
            }

            // initialising global variables used across the app
            // load preferences first before the slow ones
            Preferences prefs = await Profile.GetPreferencesAsync();
            _isDarkMode = prefs.DarkMode;

            StateHasChanged();

            // session contains information about pokemon types that profile will use
            // to load pokemon. Therefore session must be done first!
            await Profile.LoadProfileStorage();  
            await Session.LoadSessionStorage();

            if (Profile.AllTypes.Count > 0)
            {
                _state = Init.Done;
            }
            else
            {
                // uh oh
                _state = Init.Error;

            }

            SearchLocations.Add(new SmartPokedex("National Pokédex", new NamedApiResource<Pokedex> { Name = "national", Url = "https://pokeapi.co/api/v2/pokedex/1/" }));
            SearchLocations.Add(Profile.PokemonStorage.Boxes[0]);
            SearchLocations.Add(new SmartPokedex("Red & Blue", new NamedApiResource<VersionGroup> { Name = "red-blue", Url = "https://pokeapi.co/api/v2/version-group/1/" }));
            SearchLocations.Add(new SmartPokedex("Yellow", new NamedApiResource<VersionGroup> { Name = "yellow", Url = "https://pokeapi.co/api/v2/version-group/2/" }));
            SearchLocations.Add(new SmartPokedex("Gold & Silver", new NamedApiResource<VersionGroup> { Name = "gold-silver", Url = "https://pokeapi.co/api/v2/version-group/3/" }));
            SearchLocations.Add(new SmartPokedex("Crystal", new NamedApiResource<VersionGroup> { Name = "crystal", Url = "https://pokeapi.co/api/v2/version-group/4/" }));
            SearchLocations.Add(new SmartPokedex("Ruby & Sapphire", new NamedApiResource<VersionGroup> { Name = "ruby-sapphire", Url = "https://pokeapi.co/api/v2/version-group/5/" }));
            SearchLocations.Add(new SmartPokedex("Emerald", new NamedApiResource<VersionGroup> { Name = "emerald", Url = "https://pokeapi.co/api/v2/version-group/6/" }));
            SearchLocations.Add(new SmartPokedex("FireRed & LeafGreen", new NamedApiResource<VersionGroup> { Name = "firered-leafgreen", Url = "https://pokeapi.co/api/v2/version-group/7/" }));
            SearchLocations.Add(new SmartPokedex("Diamond & Pearl", new NamedApiResource<VersionGroup> { Name = "diamond-pearl", Url = "https://pokeapi.co/api/v2/version-group/8/" }));
            SearchLocations.Add(new SmartPokedex("Platinum", new NamedApiResource<VersionGroup> { Name = "platinum", Url = "https://pokeapi.co/api/v2/version-group/9/" }));
            SearchLocations.Add(new SmartPokedex("HeartGold & SoulSilver", new NamedApiResource<VersionGroup> { Name = "heartgold-soulsilver", Url = "https://pokeapi.co/api/v2/version-group/10/" }));
            SearchLocations.Add(new SmartPokedex("Black & White", new NamedApiResource<VersionGroup> { Name = "black-white", Url = "https://pokeapi.co/api/v2/version-group/11/" }));
            SearchLocations.Add(new SmartPokedex("Colosseum", new NamedApiResource<VersionGroup> { Name = "colosseum", Url = "https://pokeapi.co/api/v2/version-group/12/" }));
            SearchLocations.Add(new SmartPokedex("Black 2 & White 2", new NamedApiResource<VersionGroup> { Name = "black-2-white-2", Url = "https://pokeapi.co/api/v2/version-group/14/" }));
            SearchLocations.Add(new SmartPokedex("X & Y", new NamedApiResource<VersionGroup> { Name = "x-y", Url = "https://pokeapi.co/api/v2/version-group/15/" }));
            SearchLocations.Add(new SmartPokedex("Omega Ruby & Alpha Sapphire", new NamedApiResource<VersionGroup> { Name = "omega-ruby-alpha-sapphire", Url = "https://pokeapi.co/api/v2/version-group/16/" }));
            SearchLocations.Add(new SmartPokedex("Sun & Moon", new NamedApiResource<VersionGroup> { Name = "sun-moon", Url = "https://pokeapi.co/api/v2/version-group/17/" }));
            SearchLocations.Add(new SmartPokedex("Ultra Sun & Ultra Moon", new NamedApiResource<VersionGroup> { Name = "ultra-sun-ultra-moon", Url = "https://pokeapi.co/api/v2/version-group/18/" }));
            SearchLocations.Add(new SmartPokedex("Let's Go, Pikachu! & Let's Go, Eevee!", new NamedApiResource<VersionGroup> { Name = "lets-go-pikachu-lets-go-eevee", Url = "https://pokeapi.co/api/v2/version-group/19/" }));
            SearchLocations.Add(new SmartPokedex("Sword & Shield", new NamedApiResource<VersionGroup> { Name = "sword-shield", Url = "https://pokeapi.co/api/v2/version-group/20/" }));
            SearchLocations.Add(new SmartPokedex("The Isle of Armor", new NamedApiResource<VersionGroup> { Name = "the-isle-of-armor", Url = "https://pokeapi.co/api/v2/version-group/21/" }));
            SearchLocations.Add(new SmartPokedex("The Crown Tundra", new NamedApiResource<VersionGroup> { Name = "the-crown-tundra", Url = "https://pokeapi.co/api/v2/version-group/22/" }));
            SearchLocations.Add(new SmartPokedex("Brilliant Diamond and Shining Pearl", new NamedApiResource<VersionGroup> { Name = "brilliant-diamond-and-shining-pearl", Url = "https://pokeapi.co/api/v2/version-group/23/" }));
            SearchLocations.Add(new SmartPokedex("Legends: Arceus", new NamedApiResource<VersionGroup> { Name = "legends-arceus", Url = "https://pokeapi.co/api/v2/version-group/24/" }));
            SearchLocations.Add(new SmartPokedex("Scarlet & Violet", new NamedApiResource<VersionGroup> { Name = "scarlet-violet", Url = "https://pokeapi.co/api/v2/version-group/25/" }));
            SearchLocations.Add(new SmartPokedex("The Teal Mask", new NamedApiResource<VersionGroup> { Name = "the-teal-mask", Url = "https://pokeapi.co/api/v2/version-group/26/" }));
            SearchLocations.Add(new SmartPokedex("The Indigo Disk", new NamedApiResource<VersionGroup> { Name = "the-indigo-disk", Url = "https://pokeapi.co/api/v2/version-group/27/" }));

            StateHasChanged();
        }
    }

    void OnChangeDarkMode()
    {
        Profile?.SetDarkModeAsync(_IsDarkMode);
    }

    // nav menu
    bool _open = true;

    void ToggleDrawer()
    {
        _open = !_open;
    }
}
